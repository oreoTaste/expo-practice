{"version":3,"sources":["color.js","App.js"],"names":["theme","store","data","keyword","a","async","AsyncStorage","setItem","JSON","stringify","load","getItem","jsonValue","parse","storeTodos","todos","storeStatus","working","App","useColorScheme","styles","light","lightBorder","dark","darkBorder","colorTheme","colorBorder","useState","setWorking","todo","setTodo","setTodos","useEffect","saveWorking","editDone","key","todos_new","editing","View","style","container","header","TouchableOpacity","onPress","Text","header__text","opacity","body","TextInput","onSubmitEditing","Date","now","finished","onChangeText","returnKeyType","placeholder","value","body__input","ScrollView","stickyHeaderIndices","Object","keys","map","body__todo","borderStyle","backgroundColor","editable","text","minWidth","Dimensions","get","width","maxWidth","body__todo__text","textDecorationLine","flexDirection","marginLeft","FontAwesome5","name","size","AntDesign","finish","FontAwesome","Platform","OS","confirm","Alert","alert","remove","StatusBar","color","borderColor","flex","paddingVertical","paddingHorizontal","marginTop","justifyContent","fontSize","fontWeight","borderRadius","borderWidth","padding"],"mappings":"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","file":"static/js/app.e95ad136.chunk.js","sourcesContent":["export const theme = {\r\n    \"black\" : \"black\",\r\n    \"white\" : \"white\",\r\n    \"edit\" : \"rgba(0,0,255,0.2)\"\r\n}","import { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { StyleSheet, Text, View, ScrollView, TouchableOpacity, TextInput, useColorScheme, Button, Alert, Platform, Dimensions } from 'react-native';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { FontAwesome, FontAwesome5, AntDesign } from '@expo/vector-icons';\r\nimport {theme} from './color';\r\nimport React from \"react\";\r\n\r\nconst store = async (data, keyword) => {\r\n  try {\r\n    await AsyncStorage.setItem(keyword, JSON.stringify(data))\r\n  } catch (e) {\r\n    // saving error\r\n  }\r\n}\r\nconst load = async (keyword) => {\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(keyword)\r\n    return jsonValue != null ? JSON.parse(jsonValue) : null;\r\n  } catch(e) {\r\n    // error reading value\r\n  }\r\n}\r\nconst storeTodos = async (todos) => store(todos, '@storage_Todos')\r\nconst storeStatus = async (working) => store(working, '@storage_Working')\r\nconst loadTodos = async () => load('@storage_Todos')\r\nconst loadStatus = async () => load('@storage_Working')\r\n\r\nconst checkScheme = () => {\r\n  if(useColorScheme() == \"light\") {\r\n    return [styles.light, styles.lightBorder]\r\n  } else {\r\n    return [styles.dark, styles.darkBorder]\r\n  }\r\n}\r\nexport default function App() {\r\n  const [colorTheme, colorBorder] = checkScheme()\r\n  const [working, setWorking] = useState(true)\r\n  const [todo, setTodo] = useState()\r\n  const [todos, setTodos] = useState({})\r\n\r\n  useEffect(async () => {\r\n    setTodos(await loadTodos() || {})\r\n    setWorking(await loadStatus())\r\n  }, [])\r\n  const saveWorking = async (working) => {\r\n    setWorking(working)\r\n    await storeStatus(working)\r\n  }\r\n  const save = async () => {\r\n    if(todo == '') {\r\n      return;\r\n    }\r\n\r\n    setTodos({...todos, [Date.now()]:{todo, working, finished: false, editing: false}})\r\n    await storeTodos({...todos, [Date.now()]:{todo, working, finished: false, editing: false}})\r\n    setTodo('')\r\n  }\r\n\r\n  const remove = (key) => {\r\n    if(Platform.OS == 'web' && confirm(\"Do you want to delete?\")) {\r\n      let todos_new = {...todos}\r\n      delete todos_new[key]\r\n      setTodos(todos_new)\r\n      storeTodos(todos_new)\r\n      return;\r\n    }\r\n    Alert.alert('Do you want to delete?', null, [\r\n      {\r\n        text: 'Cancel',\r\n        style: 'cancel',\r\n      },\r\n      { text: 'OK',\r\n        onPress: async () => {\r\n          let todos_new = {...todos}\r\n          delete todos_new[key]\r\n          setTodos(todos_new)\r\n          storeTodos(todos_new)\r\n        },\r\n        style: 'destructive'\r\n      },\r\n    ]);\r\n  }\r\n  const onChangeText = (key, text) => {\r\n    let todos_new = {...todos}\r\n    todos_new[key].todo = text\r\n    setTodos(todos_new)\r\n    storeTodos(todos_new)\r\n  }\r\n  const finish = (key) => {\r\n    let todos_new = {...todos}\r\n    todos_new[key].finished = !todos_new[key].finished\r\n    setTodos(todos_new)\r\n    storeTodos(todos_new)\r\n  }\r\n  const editable = (key) => {\r\n    let todos_new = {...todos}\r\n    todos_new[key].editing = true\r\n    setTodos(todos_new)\r\n    storeTodos(todos_new)\r\n  }\r\n  const editDone = (key) => {\r\n    let todos_new = {...todos}\r\n    todos_new[key].editing = false\r\n    setTodos(todos_new)\r\n    storeTodos(todos_new)\r\n  }\r\n  return (\r\n    <View style={{...styles.container, ...colorTheme}}>\r\n      <View style={styles.header}>\r\n        <TouchableOpacity onPress={()=>saveWorking(true)}>\r\n          <Text style={{...styles.header__text, ...colorTheme, opacity: working ? 1 : 0.2}}>Work</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={()=>saveWorking(false)}>\r\n          <Text style={{...styles.header__text, ...colorTheme, opacity: !working ? 1 : 0.2}}>Travel</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View style={styles.body}>\r\n        <TextInput onSubmitEditing={()=>save()}\r\n                   onChangeText={setTodo}\r\n                   returnKeyType='done'\r\n                   placeholder={working ? 'What to check..':'Where to go..'}\r\n                   value={todo}\r\n                   style={{...styles.body__input, ...colorTheme, ...colorBorder}}/>\r\n      </View>\r\n      <ScrollView stickyHeaderIndices={true} style={styles.body}>\r\n        {todos? Object.keys(todos).map((key) => \r\n          working == todos[key].working ? \r\n          <View key={key} style={{...styles.body__todo\r\n                                , ...colorBorder\r\n                                , ...colorTheme\r\n                                , borderStyle: todos[key].editing ? 'dashed' : null\r\n                                , backgroundColor: todos[key].editing ? theme.edit : null}}>\r\n            <TextInput editable={todos[key].editing}\r\n                       onSubmitEditing={()=>editDone(key)}\r\n                       onChangeText={(text)=>onChangeText(key, text)}\r\n                       style={{ minWidth: Dimensions.get('window').width - 220\r\n                              , maxWidth: Dimensions.get('window').width - 190\r\n                              , ...styles.body__todo__text\r\n                              , ...colorTheme\r\n                              , textDecorationLine: todos[key].finished ? 'line-through' : 'none', backgroundColor: 'transparent'}}\r\n                       value={todos[key].todo}/>\r\n            <View style={{flexDirection: 'row'}}>\r\n              {todos[key].editing ? \r\n              <TouchableOpacity style={{marginLeft: 25}} >\r\n                <FontAwesome5 name=\"spell-check\" \r\n                              onPress={()=>editDone(key)}\r\n                              size={24}\r\n                              style={{...colorTheme, backgroundColor: 'transparent'}} />\r\n              </TouchableOpacity>\r\n              :\r\n              <>\r\n                <TouchableOpacity style={{marginLeft: 25}} >\r\n                  <AntDesign name=\"tool\"\r\n                             onPress={()=>editable(key)}\r\n                             size={24} style={{...colorTheme}} />\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={{marginLeft: 25}} >\r\n                  <FontAwesome5 name=\"check\"\r\n                                onPress={()=>finish(key)}\r\n                                size={24} style={{...colorTheme}} />\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={{marginLeft: 25}} >\r\n                  <FontAwesome name=\"trash-o\"\r\n                                onPress={()=>remove(key)}\r\n                                size={24} style={{...colorTheme}}/>\r\n                </TouchableOpacity>\r\n              </>\r\n              }\r\n            </View>\r\n          </View> :\r\n          null) : null}\r\n      </ScrollView>\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n}\r\n\r\n// const styles = StyleSheet.create({\r\nconst styles = {\r\n  dark: {\r\n    backgroundColor: theme[\"black\"],\r\n    color: theme[\"white\"]\r\n  },\r\n  darkBorder: {\r\n    borderColor: theme[\"white\"]\r\n  },\r\n  light: {\r\n    backgroundColor: theme[\"white\"],\r\n    color: theme[\"black\"]\r\n  },\r\n  lightBorder: {\r\n    borderColor: theme[\"black\"]\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    paddingVertical: 30,\r\n    paddingHorizontal: 15,\r\n  },\r\n  header: {\r\n    marginTop: 15,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  header__text: {\r\n    fontSize: 45,\r\n    fontWeight: '600',\r\n  },\r\n  body: {\r\n    marginTop: 5,\r\n  },\r\n  body__input: {\r\n    marginTop: 10,\r\n    fontSize: 22,\r\n    paddingHorizontal: 15,\r\n    paddingVertical: 10,\r\n    borderRadius: 20,\r\n    fontWeight: '600',\r\n    borderWidth: 1,\r\n  },\r\n  body__todo: {\r\n    marginTop: 10,\r\n    paddingHorizontal: 15,\r\n    paddingVertical: 10,\r\n    borderRadius: 5,\r\n    borderWidth: 1,\r\n    padding: 10,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  body__todo__text: {\r\n    fontSize: 22,\r\n  },\r\n  editing: {\r\n\r\n  }\r\n};\r\n"],"sourceRoot":""}